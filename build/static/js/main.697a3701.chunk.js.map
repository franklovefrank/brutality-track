{"version":3,"sources":["services/analytics.js","components/map/heat-layer.js","util/closestCity.js","hooks/useTheming.js","components/map/map.js","components/omnibox/omnibox.js","util/parseUrl.js","components/result-details/video.js","components/result-details/evidence.js","components/result-details/links.js","hooks/getEvidence.js","components/result-details/result-details.js","components/search-results/search-result.js","components/search-results/search-results.js","components/panel/panel.js","components/sidebar/sidebar.js","components/footer/footer.js","hooks/getIncidents.js","App.js","serviceWorker.js","index.js"],"names":["Analytics","initialize","ReactGA","pageview","path","event","category","action","label","options","dissipating","radius","HeatLayer","coordinates","incidents","map","geocoding","google","maps","LatLng","lat","long","data","distance","coordinateA","coordinateB","Math","sqrt","getClosetCity","coordinate","results","initialDistance","city","name","i","length","cityCoordinate","currentDistance","useTheming","useState","theme","setTheme","getLocalStorageTheme","useCallback","localStorageTheme","localStorage","getItem","window","matchMedia","matches","handleThemeChange","newTheme","document","documentElement","setAttribute","setItem","setLocalStorageTheme","useEffect","predefinedTheme","libraries","googleMapsApiKey","process","REACT_APP_GOOGLE_API_KEY","containerStyle","flex","height","restriction","latLngBounds","north","south","west","east","mapTypeControl","fullscreenControl","streetViewControl","Map","onCityClick","React","setMap","onLoad","mapInstance","setCenter","lng","setZoom","mapContainerStyle","styles","mapDarkTheme","onClick","e","latLng","panTo","Number","Omnibox","defaultInput","onClear","onSearch","input","setInput","handleSubmit","preventDefault","className","onSubmit","open","type","value","placeholder","onFocus","target","select","onChange","defaultProps","tryParseUrl","url","link","URL","hostname","match","pathname","parseUrl","Video","date","description","videoUrl","linkUrl","thumbnailUrl","href","rel","src","alt","onError","remove","format","Date","controls","parentElement","kind","Evidence","videos","filter","item","video","streams","stream","key","id","site","created_at","title","thumbnail","Links","elements","urls","icon","useEvidence","evidence","setEvidence","a","axios","get","fetchData","ResultDetails","hideResultDetail","state","links","color","width","timeout","SearchResult","onResultClick","role","tabIndex","onKeyDown","SearchResults","search","result","Panel","isOpen","openResult","setOpenResult","fuse","Fuse","includeScore","isCaseSensitive","threshold","keys","Sidebar","mapValue","setMapValue","setSearch","setCollection","sort","b","localeCompare","Footer","useIncidents","setIncidents","App","Boolean","location","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.697a3701.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\n\nconst Analytics = {\n  initialize: () => ReactGA.initialize('UA-169178928-1'),\n  pageview: (path) => ReactGA.pageview(path),\n  event: (category, action, label) =>\n    ReactGA.event({ category, action, label }),\n};\n\nexport default Analytics;\n","/* global google */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { HeatmapLayer } from '@react-google-maps/api';\n\nconst options = {\n  dissipating: false,\n  radius: 2,\n};\n\nfunction HeatLayer({ incidents }) {\n  const coordinates = incidents.map(\n    ({ geocoding }) => new google.maps.LatLng(geocoding.lat, geocoding.long),\n  );\n\n  return <HeatmapLayer data={coordinates} options={options} />;\n}\n\nHeatLayer.propTypes = {\n  incidents: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default HeatLayer;\n","const distance = (coordinateA, coordinateB) => {\n  const lat = (coordinateA.lat - coordinateB.lat) ** 2;\n  const long = (coordinateA.long - coordinateB.long) ** 2;\n  return Math.sqrt(lat + long);\n};\n\nconst getClosetCity = (coordinate, results) => {\n  const initialDistance = distance(coordinate, results[0].geocoding);\n  const city = {\n    name: results[0].city,\n    distance: initialDistance,\n    coordinate: results[0].geocoding,\n  };\n  for (let i = 0; i < results.length; i += 1) {\n    const cityCoordinate = results[i].geocoding;\n    const currentDistance = distance(coordinate, cityCoordinate);\n    if (currentDistance < city.distance) {\n      city.name = results[i].city;\n      city.distance = currentDistance;\n      city.coordinate = cityCoordinate;\n    }\n  }\n  return city;\n};\n\nexport default getClosetCity;\n","import { useState, useEffect, useCallback } from 'react';\n\n/**\n * @typedef {'light'|'dark'} ThemeValues\n */\n\n/**\n * A hooks to customize the app theming.\n * The app theme is customized using CSS variables inside a [data-theme='dark']\n * block, e.g.:\n *\n * ```css\n *  :root {\n *    --shadow-color: blue;\n *  }\n *\n *  [data-theme=\"dark\"] {\n *    --shadow-color: red;\n *  }\n * ```\n *\n * You can change the theme by calling the setTheme function with\n * one of the possible values - 'light' or 'dark'.\n *\n * @returns {[ThemeValues, handleThemeChange]} - The current color scheme and a function to\n *                                               to update it.\n */\nconst useTheming = () => {\n  const [theme, setTheme] = useState('light');\n\n  /**\n   * Checks if the system already supports the\n   * prefers-color-scheme media query. If so, returns\n   * the query itself.\n   * Returns 'light' otherwise.\n   *\n   * @returns {(ThemeValues)} - The system theme.\n   */\n  const getSystemTheme = () => {\n    // If the browser doesn't support CSS media queries,\n    // returns 'light'.\n    if (!window.matchMedia) return 'light';\n\n    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark';\n    }\n\n    return 'light';\n  };\n\n  /**\n   * Checks if a theme is saved on the local storage.\n   * If no theme is set, fallbacks to the system theme.\n   *\n   * @returns {(ThemeValues)}\n   */\n  const getLocalStorageTheme = useCallback(() => {\n    const localStorageTheme = localStorage.getItem('theme');\n    if (localStorageTheme) return localStorageTheme;\n\n    // If no theme is stored, use the system one.\n    return getSystemTheme();\n  }, []);\n\n  /**\n   * @param {ThemeValues} newTheme\n   */\n  const setLocalStorageTheme = (newTheme) => {\n    localStorage.setItem('theme', newTheme);\n  };\n\n  /**\n   * Updates the app theme and the document attributes.\n   *\n   * @param {ThemeValues} newTheme\n   */\n  const handleThemeChange = useCallback((newTheme) => {\n    // Sets the document data-theme attribute.\n    // This attribute changes the CSS variables.\n    document.documentElement.setAttribute('data-theme', newTheme);\n    setLocalStorageTheme(newTheme);\n\n    setTheme(newTheme);\n  }, []);\n\n  useEffect(() => {\n    const predefinedTheme = getLocalStorageTheme();\n\n    handleThemeChange(predefinedTheme);\n  }, [getLocalStorageTheme, handleThemeChange]);\n\n  return [theme, handleThemeChange];\n};\n\nexport default useTheming;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport HeatLayer from './heat-layer';\nimport Analytics from '../../services/analytics';\nimport getClosetCity from '../../util/closestCity';\nimport mapDarkTheme from '../../constants/mapDarkTheme.json';\nimport useTheming from '../../hooks/useTheming';\n\nconst libraries = ['visualization'];\nconst googleMapsApiKey =\n  process.env.REACT_APP_GOOGLE_API_KEY ||\n  'AIzaSyCeHLAyDL5K80JrbJ0mvh-pV3CcpWYpqn0';\n\nconst containerStyle = {\n  flex: '1',\n  height: '100vh',\n};\n\nconst options = {\n  restriction: {\n    latLngBounds: {\n      north: 52,\n      south: 22,\n      west: -136,\n      east: -60,\n    },\n  },\n  mapTypeControl: false,\n  fullscreenControl: false,\n  streetViewControl: false,\n};\n\nfunction Map({ incidents, onCityClick }) {\n  const [theme] = useTheming();\n  const [map, setMap] = React.useState(null);\n\n  const onLoad = React.useCallback(function callback(mapInstance) {\n    setMap(mapInstance);\n    mapInstance.setCenter({\n      lat: 38,\n      lng: -98,\n    });\n    mapInstance.setZoom(5);\n  }, []);\n\n  function handleMapClick(e) {\n    if (incidents.length === 0) return;\n    const city = getClosetCity(\n      {\n        lat: e.latLng.lat(),\n        long: e.latLng.lng(),\n      },\n      incidents,\n    );\n\n    Analytics.event('Map', 'Clicked on a city', city.name);\n    onCityClick(city.name);\n\n    map.setZoom(7);\n    map.panTo({\n      lat: Number(city.coordinate.lat),\n      lng: Number(city.coordinate.long),\n    });\n  }\n\n  return (\n    <LoadScript libraries={libraries} googleMapsApiKey={googleMapsApiKey}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        options={{\n          options,\n          styles: theme === 'dark' ? mapDarkTheme : null,\n        }}\n        onLoad={onLoad}\n        onClick={handleMapClick}\n      >\n        <HeatLayer incidents={incidents} />\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n\nMap.propTypes = {\n  incidents: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onCityClick: PropTypes.func.isRequired,\n};\n\nexport default Map;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaFistRaised } from 'react-icons/fa';\nimport { MdSearch, MdClear } from 'react-icons/md';\nimport Analytics from '../../services/analytics';\n\nimport './omnibox.css';\n\nfunction Omnibox({ defaultInput, onClear, onSearch }) {\n  const [input, setInput] = React.useState(defaultInput);\n\n  const handleFocus = (e) => e.target.select();\n  const handleChange = (e) => setInput(e.target.value);\n\n  const handleSubmit = (e) => {\n    Analytics.event('Omnibox', 'Searched for term', input);\n    onSearch(input);\n    e.preventDefault();\n  };\n\n  const handleClear = () => {\n    Analytics.event('Omnibox', 'Cleared input');\n    onClear();\n    setInput('');\n  };\n\n  const handleLogoClick = () => {\n    Analytics.event('Omnibox', 'Logo clicked', input);\n    window.open(\n      'https://github.com/police-brutality-2020/visualizer',\n      'police-brutality-2020',\n    );\n  };\n\n  return (\n    <div className=\"omnibox\">\n      <form onSubmit={handleSubmit}>\n        <FaFistRaised className=\"icon logo\" onClick={handleLogoClick} />\n        <input\n          type=\"text\"\n          value={input}\n          placeholder=\"Search Police Brutality\"\n          onFocus={handleFocus}\n          onChange={handleChange}\n        />\n        <MdSearch className=\"icon\" onClick={handleSubmit} />\n        <div className=\"divider\" />\n        <MdClear className=\"icon\" onClick={handleClear} />\n      </form>\n    </div>\n  );\n}\n\nOmnibox.propTypes = {\n  defaultInput: PropTypes.string,\n  onClear: PropTypes.func,\n  onSearch: PropTypes.func,\n};\n\nOmnibox.defaultProps = {\n  defaultInput: '',\n  onClear: () => {},\n  onSearch: () => {},\n};\n\nexport default Omnibox;\n","import React from 'react';\nimport {\n  FaFacebookF,\n  FaGoogle,\n  FaInstagram,\n  FaLink,\n  FaNewspaper,\n  FaReddit,\n  FaTwitter,\n  FaVideo,\n  FaYoutube,\n} from 'react-icons/fa';\n\nconst parseUrl = (link) => {\n  const domain = link.hostname.match(/[^.]+\\.\\w+$/);\n\n  switch (domain[0]) {\n    case 'cnn.com':\n    case 'cbslocal.com':\n    case 'denverpost.com':\n    case 'miamiherald.com':\n    case 'nytimes.com':\n    case 'theguardian.com':\n    case 'wapo.st':\n      return [<FaNewspaper />, link.hostname];\n    case 'fbcdn.net':\n    case 'facebook.com':\n      return [<FaFacebookF />, link.hostname];\n    case 'google.ca':\n    case 'google.com':\n      return [<FaGoogle />, link.hostname];\n    case 'instagram.com':\n      return [<FaInstagram />, link.hostname];\n    case 'redd.it':\n    case 'reddit.com':\n      // 'r/subreddit'\n      return [<FaReddit />, link.pathname.match(/r\\/[^/]+/)[0]];\n    case 'tiktok.com':\n      return [<FaVideo />, link.pathname.match(/@\\w+/)[0]];\n    case 'twitter.com':\n      // '@username'\n      return [<FaTwitter />, `@${link.pathname.match(/([^/]+)/)[1]}`];\n    case 'youtu.be':\n    case 'youtube.com':\n      return [<FaYoutube />, link.hostname];\n    default:\n      return [<FaLink />, link.hostname];\n  }\n};\n\nconst tryParseUrl = (url) => {\n  const link = new URL(url);\n  try {\n    return parseUrl(link);\n  } catch (e) {\n    return [<FaLink />, link.hostname];\n  }\n};\n\nexport default tryParseUrl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport parseUrl from '../../util/parseUrl';\n\nimport './video.css';\n\nfunction Video({ type, date, description, videoUrl, linkUrl, thumbnailUrl }) {\n  const [, label] = parseUrl(linkUrl);\n\n  // When the thumbnail or video fails to load, remove the element\n  const onThumbnailError = (e) => e.target.remove();\n  const onVideoError = (e) => e.target.parentElement.remove();\n\n  return (\n    <div className=\"video\">\n      <a href={linkUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={thumbnailUrl} alt=\"thumbnail\" onError={onThumbnailError} />\n        <div className=\"source\">\n          <div className=\"label\">{label}</div>\n          <div className=\"type\">\n            {type} &bull; {format(new Date(date), 'LLLL do, yyyy')}\n          </div>\n        </div>\n      </a>\n      <p>{description}</p>\n      <video controls onError={onVideoError}>\n        <source type=\"video/mp4\" src={videoUrl} />\n        <track kind=\"captions\" />\n      </video>\n    </div>\n  );\n}\n\nVideo.propTypes = {\n  type: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  videoUrl: PropTypes.string.isRequired,\n  linkUrl: PropTypes.string.isRequired,\n  thumbnailUrl: PropTypes.string.isRequired,\n};\n\nexport default Video;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Video from './video';\n\nimport './evidence.css';\n\nfunction Evidence({ data }) {\n  const videos = data\n    .filter(\n      (item) =>\n        // Ensure all videos have at least one stream\n        item.video[0] && item.video[0].streams && item.video[0].streams[0],\n    )\n    .map((item) => {\n      const video = item.video[0];\n      const stream = video.streams[0];\n\n      return (\n        <Video\n          key={item.id}\n          type={video.site}\n          date={video.created_at}\n          description={video.description || video.title}\n          linkUrl={video.url}\n          videoUrl={stream.url}\n          thumbnailUrl={video.thumbnail}\n        />\n      );\n    });\n\n  return (\n    <div className=\"evidence\">\n      <h4>Evidence</h4>\n      {videos.length === 0 ? (\n        <p>\n          Videos for this incident are not available yet. Visit the links above\n          to learn more.\n        </p>\n      ) : (\n        videos\n      )}\n    </div>\n  );\n}\n\nEvidence.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Evidence;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport parseUrl from '../../util/parseUrl';\n\nimport './links.css';\n\nfunction Links({ urls }) {\n  const elements = urls.map((url) => {\n    // Look up the icon and label for this URL\n    const [icon, label] = parseUrl(url);\n\n    return (\n      <a key={url} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        {icon}\n        <span>{label}</span>\n      </a>\n    );\n  });\n\n  return <div className=\"links\">{elements}</div>;\n}\n\nLinks.propTypes = {\n  urls: PropTypes.arrayOf(PropTypes.string),\n};\n\nLinks.defaultProps = {\n  urls: [],\n};\n\nexport default Links;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useEvidence = (id) => {\n  const [evidence, setEvidence] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await axios.get(\n        `https://api.846policebrutality.com/api/incidents/${id}?include=evidence`,\n      );\n      setEvidence(data.data[0]);\n    };\n\n    fetchData();\n  }, [id]);\n\n  return evidence;\n};\n\nexport default useEvidence;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport Loader from 'react-loader-spinner';\nimport { FaChevronLeft } from 'react-icons/fa';\nimport Evidence from './evidence';\nimport Links from './links';\nimport useEvidence from '../../hooks/getEvidence';\nimport useTheming from '../../hooks/useTheming';\n\nimport './result-details.css';\n\nfunction ResultDetails({ id, hideResultDetail }) {\n  const [theme] = useTheming();\n  const data = useEvidence(id);\n\n  return data ? (\n    <div className=\"result-details\">\n      <div className=\"header\">\n        <FaChevronLeft onClick={hideResultDetail} />\n        <div>\n          <h3>{data.title}</h3>\n          <p>\n            {data.city}, {data.state} &bull;{' '}\n            {format(new Date(data.date), 'LLLL do, yyyy')}\n          </p>\n        </div>\n      </div>\n      <div className=\"divider\" />\n      <Links urls={data.links} />\n      <div className=\"divider\" />\n      <Evidence data={data.evidence} />\n    </div>\n  ) : (\n    <div className=\"results-details-loader\">\n      <Loader\n        type=\"TailSpin\"\n        color={theme === 'dark' ? '#FFF' : '#000'}\n        height={50}\n        width={50}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n\nResultDetails.propTypes = {\n  id: PropTypes.string.isRequired,\n  hideResultDetail: PropTypes.func.isRequired,\n};\n\nexport default ResultDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport Analytics from '../../services/analytics';\n\nimport './search-result.css';\n\nfunction SearchResult({ id, title, city, state, date, onResultClick }) {\n  const onClick = () => {\n    Analytics.event('SearchResult', 'Result clicked', title);\n    onResultClick(id);\n  };\n\n  return (\n    <div\n      className=\"search-result\"\n      role=\"button\"\n      tabIndex={0}\n      onClick={onClick}\n      onKeyDown={onClick}\n    >\n      <h4>{title}</h4>\n      <p>\n        {city}, {state} &bull; {format(new Date(date), 'LLLL do, yyyy')}\n      </p>\n    </div>\n  );\n}\n\nSearchResult.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  city: PropTypes.string.isRequired,\n  state: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  onResultClick: PropTypes.func.isRequired,\n};\n\nexport default SearchResult;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchResult from './search-result';\n\nimport './search-results.css';\n\nfunction SearchResults({ search, results, onResultClick }) {\n  const elements = results.map((result) => (\n    <SearchResult\n      id={result.id}\n      key={result.id}\n      title={result.title}\n      city={result.city}\n      state={result.state}\n      date={result.date}\n      onResultClick={onResultClick}\n    />\n  ));\n\n  return elements.length === 0 ? (\n    <div className=\"search-results empty\">\n      <h4>No results for &quot;{search}&quot;</h4>\n      <p>\n        Make sure your search is spelled correctly. Try searching for a city,\n        state, or police department.\n      </p>\n      <p className=\"call-to-action\">Think you&apos;ve found a bug?</p>\n      <a\n        href=\"https://github.com/police-brutality-2020/visualizer\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Let us know on GitHub.\n      </a>\n    </div>\n  ) : (\n    <div className=\"search-results\">{elements}</div>\n  );\n}\n\nSearchResults.propTypes = {\n  search: PropTypes.string.isRequired,\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onResultClick: PropTypes.func.isRequired,\n};\n\nexport default SearchResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ResultDetails from '../result-details/result-details';\nimport SearchResults from '../search-results/search-results';\n\nimport './panel.css';\n\nfunction Panel({ search, results, isOpen }) {\n  const [openResult, setOpenResult] = React.useState(null);\n  const hideResultDetail = () => setOpenResult(false);\n\n  return (\n    <div className={`panel ${isOpen ? 'open' : ''}`}>\n      <div className=\"omnibox-spacer\" />\n      {openResult ? (\n        <ResultDetails hideResultDetail={hideResultDetail} id={openResult} />\n      ) : (\n        <SearchResults\n          search={search}\n          results={results}\n          onResultClick={setOpenResult}\n        />\n      )}\n    </div>\n  );\n}\n\nPanel.propTypes = {\n  search: PropTypes.string.isRequired,\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isOpen: PropTypes.bool.isRequired,\n};\n\nexport default Panel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Fuse from 'fuse.js';\nimport Omnibox from '../omnibox/omnibox';\nimport Panel from '../panel/panel';\n\nconst fuse = new Fuse([], {\n  includeScore: true,\n  isCaseSensitive: false,\n  threshold: 0.3,\n  keys: ['city', 'state', 'title'],\n});\n\nfunction Sidebar({ incidents, mapValue, setMapValue }) {\n  const [search, setSearch] = React.useState('');\n\n  React.useEffect(() => {\n    setSearch(mapValue);\n  }, [mapValue]);\n\n  const handleClear = () => {\n    setSearch('');\n    setMapValue('');\n  };\n  const isOpen = !!search;\n\n  // Inform the Fuse instance of the new `incidents` array\n  fuse.setCollection(incidents);\n\n  // Perform a fuzzy search and sort the results by date\n  const results = fuse\n    .search(search)\n    .map((result) => result.item)\n    .sort((a, b) => b.date.localeCompare(a.date));\n\n  return (\n    <>\n      <Omnibox\n        key={`omnibox-${search}`}\n        defaultInput={search}\n        onClear={handleClear}\n        onSearch={setSearch}\n      />\n      <Panel\n        key={`panel-${search}`}\n        search={search}\n        results={results}\n        isOpen={isOpen}\n      />\n    </>\n  );\n}\n\nSidebar.propTypes = {\n  incidents: PropTypes.arrayOf(PropTypes.object).isRequired,\n  mapValue: PropTypes.string.isRequired,\n  setMapValue: PropTypes.func.isRequired,\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport './footer.css';\n\nfunction Footer() {\n  return (\n    <footer>\n      <a href=\"https://github.com/franklovefrank/brutality-track\">Source</a>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useIncidents = () => {\n  const [incidents, setIncidents] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await axios.get(\n        'https://api.846policebrutality.com/api/incidents',\n      );\n      setIncidents(data.data);\n    };\n\n    fetchData();\n  }, []);\n\n  return incidents;\n};\n\nexport default useIncidents;\n","import React from 'react';\nimport Analytics from './services/analytics';\nimport Map from './components/map/map';\nimport Sidebar from './components/sidebar/sidebar';\nimport Footer from './components/footer/footer';\nimport useIncidents from './hooks/getIncidents';\nimport useTheming from './hooks/useTheming';\n\nimport './App.css';\nimport './constants/colors.css';\n\nfunction App() {\n  // Start tracking pageviews/events\n  Analytics.initialize();\n  Analytics.pageview('/');\n\n  const [mapValue, setMapValue] = React.useState('');\n  // Initialize the app theming.\n  useTheming();\n\n  // Fetch the latest incidents from the backend API\n  const incidents = useIncidents();\n  if (!incidents) return null;\n\n  return (\n    <div className=\"app\">\n      <Sidebar\n        incidents={incidents}\n        mapValue={mapValue}\n        setMapValue={setMapValue}\n      />\n      <Map incidents={incidents} onCityClick={setMapValue} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}